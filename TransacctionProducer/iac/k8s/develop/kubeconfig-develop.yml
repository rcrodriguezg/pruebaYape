apiVersion: v1
kind: Service
metadata:
  name: ms-project-name-svc
  namespace: backend-project
spec:
  selector:
    app: ms-project-name
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 3001
  type: NodePort    

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ms-project-name
  namespace: backend-smartki
  labels:
    app: ms-project-name
spec:
  selector:
    matchLabels:
      app: ms-project-name
  template:
    metadata:
      labels:
        app: ms-project-name
    spec:
      containers:
      - name:  ms-project-name-deploy
        image: gcr.io/labs-cross/ms-project-name:latest
        ports:
          - containerPort: 3001
        readinessProbe:
          tcpSocket:
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 3001
        imagePullPolicy: Always
        envFrom:
            - secretRef:
                name: develop-env-secrets-ms-smartki
        volumeMounts:
            - name: smartki-secrets-volume
              mountPath: /secrets/
              readOnly: true
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        command:
          - "/cloud_sql_proxy"
          - "-instances=labs-cross:us-west1:base-datos-cross=tcp:5432"
          - "-credential_file=/secrets/service_account.json"
        securityContext:
          runAsNonRoot: true
        volumeMounts:
          - name: smartki-secrets-volume
            mountPath: /secrets/
            readOnly: true      
      volumes:
        - name: smartki-secrets-volume
          secret:
            secretName: google-secrets
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      serviceAccountName: default

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ms-project-name-develop-ingress
  namespace: backend-smartki
  annotations:
    kubernetes.io/ingress.allow-http: "false"
    kubernetes.io/ingress.global-static-ip-name: ms-project-name-dev-ip
    networking.gke.io/managed-certificates: ms-project-name-develop-certificate
    kubernetes.io/ingress.class: "gce"
    ingress.gcp.kubernetes.io/pre-shared-cert: ""
spec:
  rules:
  - host: ms.export.dev.smartki.org
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: ms-project-name-svc
            port:
              number: 8000